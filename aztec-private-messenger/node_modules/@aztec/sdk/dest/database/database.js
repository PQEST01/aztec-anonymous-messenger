export class SpendingKey {
    constructor(userId, key, // only contains x coordinate of a grumpkin address.
    treeIndex, hashPath) {
        this.userId = userId;
        this.key = key;
        this.treeIndex = treeIndex;
        this.hashPath = hashPath;
        if (key.length !== 32) {
            throw new Error('Invalid key buffer.');
        }
    }
}
export class Alias {
    constructor(accountPublicKey, aliasHash, index, noteCommitment1, spendingPublicKeyX) {
        this.accountPublicKey = accountPublicKey;
        this.aliasHash = aliasHash;
        this.index = index;
        this.noteCommitment1 = noteCommitment1;
        this.spendingPublicKeyX = spendingPublicKeyX;
    }
}
export class BulkUserStateUpdateData {
    constructor(updateUserArgs = [], addSpendingKeyArgs = [], upsertAccountTxArgs = [], upsertPaymentTxArgs = [], upsertDefiTxArgs = [], addNoteArgs = [], nullifyNoteArgs = []) {
        this.updateUserArgs = updateUserArgs;
        this.addSpendingKeyArgs = addSpendingKeyArgs;
        this.upsertAccountTxArgs = upsertAccountTxArgs;
        this.upsertPaymentTxArgs = upsertPaymentTxArgs;
        this.upsertDefiTxArgs = upsertDefiTxArgs;
        this.addNoteArgs = addNoteArgs;
        this.nullifyNoteArgs = nullifyNoteArgs;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YWJhc2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvZGF0YWJhc2UvZGF0YWJhc2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBUUEsTUFBTSxPQUFPLFdBQVc7SUFDdEIsWUFDUyxNQUF1QixFQUN2QixHQUFXLEVBQUUsb0RBQW9EO0lBQ2pFLFNBQWlCLEVBQ2pCLFFBQWdCO1FBSGhCLFdBQU0sR0FBTixNQUFNLENBQWlCO1FBQ3ZCLFFBQUcsR0FBSCxHQUFHLENBQVE7UUFDWCxjQUFTLEdBQVQsU0FBUyxDQUFRO1FBQ2pCLGFBQVEsR0FBUixRQUFRLENBQVE7UUFFdkIsSUFBSSxHQUFHLENBQUMsTUFBTSxLQUFLLEVBQUUsRUFBRTtZQUNyQixNQUFNLElBQUksS0FBSyxDQUFDLHFCQUFxQixDQUFDLENBQUM7U0FDeEM7SUFDSCxDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8sS0FBSztJQUNoQixZQUNTLGdCQUFpQyxFQUNqQyxTQUFvQixFQUNwQixLQUFhLEVBQ2IsZUFBd0IsRUFDeEIsa0JBQTJCO1FBSjNCLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBaUI7UUFDakMsY0FBUyxHQUFULFNBQVMsQ0FBVztRQUNwQixVQUFLLEdBQUwsS0FBSyxDQUFRO1FBQ2Isb0JBQWUsR0FBZixlQUFlLENBQVM7UUFDeEIsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFTO0lBQ2pDLENBQUM7Q0FDTDtBQUVELE1BQU0sT0FBTyx1QkFBdUI7SUFDbEMsWUFDUyxpQkFBdUQsRUFBRSxFQUN6RCxxQkFBK0QsRUFBRSxFQUNqRSxzQkFBaUUsRUFBRSxFQUNuRSxzQkFBaUUsRUFBRSxFQUNuRSxtQkFBMkQsRUFBRSxFQUM3RCxjQUFpRCxFQUFFLEVBQ25ELGtCQUF5RCxFQUFFO1FBTjNELG1CQUFjLEdBQWQsY0FBYyxDQUEyQztRQUN6RCx1QkFBa0IsR0FBbEIsa0JBQWtCLENBQStDO1FBQ2pFLHdCQUFtQixHQUFuQixtQkFBbUIsQ0FBZ0Q7UUFDbkUsd0JBQW1CLEdBQW5CLG1CQUFtQixDQUFnRDtRQUNuRSxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQTZDO1FBQzdELGdCQUFXLEdBQVgsV0FBVyxDQUF3QztRQUNuRCxvQkFBZSxHQUFmLGVBQWUsQ0FBNEM7SUFDakUsQ0FBQztDQUNMIn0=