import { AliasHash } from '@aztec/barretenberg/account_id';
import { GrumpkinAddress } from '@aztec/barretenberg/address';
import { AccountProver } from '@aztec/barretenberg/client_proofs';
import { WorldState } from '@aztec/barretenberg/world_state';
import { Database } from '../database/index.js';
import { AccountProofInput } from './proof_input.js';
import { ProofOutput } from './proof_output.js';
export declare class AccountProofCreator {
    private prover;
    private worldState;
    private db;
    constructor(prover: AccountProver, worldState: WorldState, db: Database);
    createProofInput(accountPublicKey: GrumpkinAddress, aliasHash: AliasHash, migrate: boolean, spendingPublicKey: GrumpkinAddress, newAccountPublicKey: GrumpkinAddress | undefined, newSpendingPublicKey1: GrumpkinAddress | undefined, newSpendingPublicKey2: GrumpkinAddress | undefined, spendingKeyExists?: boolean): Promise<AccountProofInput>;
    createProof({ tx, signature }: AccountProofInput, txRefNo: number, timeout?: number): Promise<ProofOutput>;
    private getAccountPathAndIndex;
}
//# sourceMappingURL=account_proof_creator.d.ts.map