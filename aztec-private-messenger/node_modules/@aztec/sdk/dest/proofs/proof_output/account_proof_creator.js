import { ProofData } from '@aztec/barretenberg/client_proofs';
import { createDebugLogger } from '@aztec/barretenberg/log';
import { OffchainAccountData } from '@aztec/barretenberg/offchain_tx_data';
import { TxId } from '@aztec/barretenberg/tx_id';
import { CoreAccountTx } from '../../core_tx/index.js';
const debug = createDebugLogger('bb:account_proof_creator');
export class AccountProofCreator {
    constructor(prover) {
        this.prover = prover;
    }
    async createProof(tx, signature, txRefNo, timeout) {
        debug('creating proof...');
        const start = new Date().getTime();
        const proof = await this.prover.createAccountProof(tx, signature, timeout);
        debug(`created proof: ${new Date().getTime() - start}ms`);
        debug(`proof size: ${proof.length}`);
        const proofData = new ProofData(proof);
        const txId = new TxId(proofData.txId);
        const { aliasHash, newAccountPublicKey, newSpendingPublicKey1, newSpendingPublicKey2, migrate } = tx;
        const coreTx = new CoreAccountTx(txId, newAccountPublicKey, aliasHash, newSpendingPublicKey1?.x(), newSpendingPublicKey2?.x(), migrate, txRefNo, new Date());
        const offchainTxData = new OffchainAccountData(newAccountPublicKey, aliasHash, newSpendingPublicKey1?.x(), newSpendingPublicKey2?.x(), txRefNo);
        return { tx: coreTx, proofData, offchainTxData };
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3VudF9wcm9vZl9jcmVhdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3Byb29mcy9wcm9vZl9vdXRwdXQvYWNjb3VudF9wcm9vZl9jcmVhdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBNEIsU0FBUyxFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFFeEYsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDNUQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDM0UsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUV2RCxNQUFNLEtBQUssR0FBRyxpQkFBaUIsQ0FBQywwQkFBMEIsQ0FBQyxDQUFDO0FBRTVELE1BQU0sT0FBTyxtQkFBbUI7SUFDOUIsWUFBb0IsTUFBcUI7UUFBckIsV0FBTSxHQUFOLE1BQU0sQ0FBZTtJQUFHLENBQUM7SUFFdEMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxFQUFhLEVBQUUsU0FBMkIsRUFBRSxPQUFlLEVBQUUsT0FBZ0I7UUFDcEcsS0FBSyxDQUFDLG1CQUFtQixDQUFDLENBQUM7UUFDM0IsTUFBTSxLQUFLLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUNuQyxNQUFNLEtBQUssR0FBRyxNQUFNLElBQUksQ0FBQyxNQUFNLENBQUMsa0JBQWtCLENBQUMsRUFBRSxFQUFFLFNBQVMsRUFBRSxPQUFPLENBQUMsQ0FBQztRQUMzRSxLQUFLLENBQUMsa0JBQWtCLElBQUksSUFBSSxFQUFFLENBQUMsT0FBTyxFQUFFLEdBQUcsS0FBSyxJQUFJLENBQUMsQ0FBQztRQUMxRCxLQUFLLENBQUMsZUFBZSxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQztRQUVyQyxNQUFNLFNBQVMsR0FBRyxJQUFJLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN2QyxNQUFNLElBQUksR0FBRyxJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdEMsTUFBTSxFQUFFLFNBQVMsRUFBRSxtQkFBbUIsRUFBRSxxQkFBcUIsRUFBRSxxQkFBcUIsRUFBRSxPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUM7UUFDckcsTUFBTSxNQUFNLEdBQUcsSUFBSSxhQUFhLENBQzlCLElBQUksRUFDSixtQkFBbUIsRUFDbkIsU0FBUyxFQUNULHFCQUFxQixFQUFFLENBQUMsRUFBRSxFQUMxQixxQkFBcUIsRUFBRSxDQUFDLEVBQUUsRUFDMUIsT0FBTyxFQUNQLE9BQU8sRUFDUCxJQUFJLElBQUksRUFBRSxDQUNYLENBQUM7UUFDRixNQUFNLGNBQWMsR0FBRyxJQUFJLG1CQUFtQixDQUM1QyxtQkFBbUIsRUFDbkIsU0FBUyxFQUNULHFCQUFxQixFQUFFLENBQUMsRUFBRSxFQUMxQixxQkFBcUIsRUFBRSxDQUFDLEVBQUUsRUFDMUIsT0FBTyxDQUNSLENBQUM7UUFFRixPQUFPLEVBQUUsRUFBRSxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsY0FBYyxFQUFFLENBQUM7SUFDbkQsQ0FBQztDQUNGIn0=