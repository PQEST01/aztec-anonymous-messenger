/// <reference types="node" resolution-mode="require"/>
import { GrumpkinAddress } from '@aztec/barretenberg/address';
import { AssetValue } from '@aztec/barretenberg/asset';
import { AuthAlgorithms } from '../../auth_algorithms/index.js';
import { Note } from '../../note/index.js';
import { PaymentProofRequestData, SpendingKeyAccount } from '../proof_request_data/index.js';
import { JoinSplitTxInputCreator } from './join_split_tx_input_creator.js';
import { PaymentProofInput } from './proof_input.js';
export declare class PaymentProofInputCreator {
    private joinSplitTxInputCreator;
    constructor(joinSplitTxInputCreator: JoinSplitTxInputCreator);
    createProofInputs({ accountPublicKey, proofId, assetValue, fee, publicOwner, recipient, recipientSpendingKeyRequired, inputNotes, spendingKeyAccount, dataRoot, allowChain, hideNoteCreator, }: PaymentProofRequestData, authAlgos: AuthAlgorithms): Promise<PaymentProofInput[]>;
    createFeeProofInputs(accountPublicKey: GrumpkinAddress, fee: AssetValue, inputNotes: Note[], spendingKeyAccount: SpendingKeyAccount, dataRoot: Buffer, allowChain: boolean, authAlgos: AuthAlgorithms): Promise<PaymentProofInput[]>;
    private createChainedProofInputs;
}
//# sourceMappingURL=payment_proof_input_creator.d.ts.map