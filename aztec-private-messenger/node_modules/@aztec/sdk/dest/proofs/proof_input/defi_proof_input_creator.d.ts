import { AuthAlgorithms } from '../../auth_algorithms/index.js';
import { DefiProofRequestData } from '../proof_request_data/index.js';
import { JoinSplitTxInputCreator } from './join_split_tx_input_creator.js';
import { PaymentProofInputCreator } from './payment_proof_input_creator.js';
import { DefiProofInput, PaymentProofInput } from './proof_input.js';
export declare class DefiProofInputCreator {
    private joinSplitTxInputCreator;
    private paymentProofInputCreator;
    constructor(joinSplitTxInputCreator: JoinSplitTxInputCreator, paymentProofInputCreator: PaymentProofInputCreator);
    createProofInputs({ accountPublicKey, bridgeCallData, assetValue, fee, inputNotes, spendingKeyAccount, dataRoot, allowChain, }: DefiProofRequestData, authAlgos: AuthAlgorithms): Promise<(PaymentProofInput | DefiProofInput)[]>;
    private createChainedProofInputs;
    private createDefiProofInput;
}
//# sourceMappingURL=defi_proof_input_creator.d.ts.map