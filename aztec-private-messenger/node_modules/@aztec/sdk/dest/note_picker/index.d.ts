/// <reference types="node" resolution-mode="require"/>
import { Note } from '../note/index.js';
export interface NotePickerOptions {
    excludedNullifiers?: Buffer[];
    excludePendingNotes?: boolean;
    spendingKeyRequired?: boolean;
}
export declare class NotePicker {
    private readonly sortedNotes;
    constructor(notes?: Note[]);
    pick(value: bigint, { excludedNullifiers, excludePendingNotes, spendingKeyRequired }?: NotePickerOptions): Note[];
    private reducePickedNotesValues;
    private findMinimumNotes;
    pickOne(value: bigint, options?: NotePickerOptions): Note | undefined;
    getSum(): bigint;
    getSpendableNoteValues(options?: NotePickerOptions): bigint[];
    getMaxSpendableNoteValues({ excludedNullifiers, excludePendingNotes, spendingKeyRequired, numNotes, }?: NotePickerOptions & {
        numNotes?: number;
    }): bigint[];
    private getMaxSpendableNotes;
    private getSortedNotes;
    private sortNotes;
    private filterByOptions;
}
//# sourceMappingURL=index.d.ts.map