/// <reference types="node" resolution-mode="require"/>
import { GrumpkinAddress } from '@aztec/barretenberg/address';
import { Grumpkin } from '@aztec/barretenberg/ecc';
import { NoteAlgorithms, NoteDecryptor } from '@aztec/barretenberg/note_algorithms';
import { BarretenbergWasm } from '@aztec/barretenberg/wasm';
import { KeyPair } from '../key_pair/index.js';
import { JoinSplitTxInput } from '../proofs/proof_input/index.js';
import { AuthAlgorithms } from './auth_algorithms.js';
export declare class KeyPairAuthAlgorithms implements AuthAlgorithms {
    private keyPair;
    private grumpkin;
    private noteAlgos;
    private noteDecryptor;
    private wasm;
    constructor(keyPair: KeyPair, grumpkin: Grumpkin, noteAlgos: NoteAlgorithms, noteDecryptor: NoteDecryptor, wasm: BarretenbergWasm);
    computeValueNoteNullifier(commitment: Buffer, gibberish?: boolean): Promise<Buffer>;
    deriveNoteSecret(ecdhPubKey: GrumpkinAddress): Promise<Buffer>;
    decryptViewingKeys(viewingKeysBuf: Buffer): Promise<(import("@aztec/barretenberg/note_algorithms").DecryptedNote | undefined)[]>;
    createJoinSplitProofSigningData(tx: JoinSplitTxInput): Promise<Buffer>;
}
//# sourceMappingURL=key_pair_auth_algorithms.d.ts.map