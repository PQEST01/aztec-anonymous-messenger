import { createJoinSplitProofSigningData } from '@aztec/barretenberg/client_proofs';
import { batchDecryptNotes, deriveNoteSecret, } from '@aztec/barretenberg/note_algorithms';
import { toJoinSplitTx } from '../proofs/proof_input/index.js';
export class KeyPairAuthAlgorithms {
    constructor(keyPair, grumpkin, noteAlgos, noteDecryptor, wasm) {
        this.keyPair = keyPair;
        this.grumpkin = grumpkin;
        this.noteAlgos = noteAlgos;
        this.noteDecryptor = noteDecryptor;
        this.wasm = wasm;
    }
    async computeValueNoteNullifier(commitment, gibberish = false) {
        const accountPrivateKey = await this.keyPair.getPrivateKey();
        return this.noteAlgos.valueNoteNullifier(commitment, accountPrivateKey, !gibberish);
    }
    async deriveNoteSecret(ecdhPubKey) {
        const accountPrivateKey = await this.keyPair.getPrivateKey();
        return deriveNoteSecret(ecdhPubKey, accountPrivateKey, this.grumpkin);
    }
    async decryptViewingKeys(viewingKeysBuf) {
        const accountPrivateKey = await this.keyPair.getPrivateKey();
        return await batchDecryptNotes(viewingKeysBuf, accountPrivateKey, this.noteDecryptor, this.grumpkin);
    }
    async createJoinSplitProofSigningData(tx) {
        const accountPrivateKey = await this.keyPair.getPrivateKey();
        return await createJoinSplitProofSigningData(toJoinSplitTx(tx, accountPrivateKey), this.wasm);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia2V5X3BhaXJfYXV0aF9hbGdvcml0aG1zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2F1dGhfYWxnb3JpdGhtcy9rZXlfcGFpcl9hdXRoX2FsZ29yaXRobXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLCtCQUErQixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFFcEYsT0FBTyxFQUNMLGlCQUFpQixFQUNqQixnQkFBZ0IsR0FHakIsTUFBTSxxQ0FBcUMsQ0FBQztBQUc3QyxPQUFPLEVBQW9CLGFBQWEsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBR2pGLE1BQU0sT0FBTyxxQkFBcUI7SUFDaEMsWUFDVSxPQUFnQixFQUNoQixRQUFrQixFQUNsQixTQUF5QixFQUN6QixhQUE0QixFQUM1QixJQUFzQjtRQUp0QixZQUFPLEdBQVAsT0FBTyxDQUFTO1FBQ2hCLGFBQVEsR0FBUixRQUFRLENBQVU7UUFDbEIsY0FBUyxHQUFULFNBQVMsQ0FBZ0I7UUFDekIsa0JBQWEsR0FBYixhQUFhLENBQWU7UUFDNUIsU0FBSSxHQUFKLElBQUksQ0FBa0I7SUFDN0IsQ0FBQztJQUVHLEtBQUssQ0FBQyx5QkFBeUIsQ0FBQyxVQUFrQixFQUFFLFNBQVMsR0FBRyxLQUFLO1FBQzFFLE1BQU0saUJBQWlCLEdBQUcsTUFBTSxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsRUFBRSxDQUFDO1FBQzdELE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxrQkFBa0IsQ0FBQyxVQUFVLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUN0RixDQUFDO0lBRU0sS0FBSyxDQUFDLGdCQUFnQixDQUFDLFVBQTJCO1FBQ3ZELE1BQU0saUJBQWlCLEdBQUcsTUFBTSxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsRUFBRSxDQUFDO1FBQzdELE9BQU8sZ0JBQWdCLENBQUMsVUFBVSxFQUFFLGlCQUFpQixFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUN4RSxDQUFDO0lBRU0sS0FBSyxDQUFDLGtCQUFrQixDQUFDLGNBQXNCO1FBQ3BELE1BQU0saUJBQWlCLEdBQUcsTUFBTSxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsRUFBRSxDQUFDO1FBQzdELE9BQU8sTUFBTSxpQkFBaUIsQ0FBQyxjQUFjLEVBQUUsaUJBQWlCLEVBQUUsSUFBSSxDQUFDLGFBQWEsRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDdkcsQ0FBQztJQUVNLEtBQUssQ0FBQywrQkFBK0IsQ0FBQyxFQUFvQjtRQUMvRCxNQUFNLGlCQUFpQixHQUFHLE1BQU0sSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLEVBQUUsQ0FBQztRQUM3RCxPQUFPLE1BQU0sK0JBQStCLENBQUMsYUFBYSxDQUFDLEVBQUUsRUFBRSxpQkFBaUIsQ0FBQyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNoRyxDQUFDO0NBQ0YifQ==