import { TreeNote } from '@aztec/barretenberg/note_algorithms';
export class Note {
    constructor(treeNote, commitment, nullifier, allowChain, nullified, index, hashPath) {
        this.treeNote = treeNote;
        this.commitment = commitment;
        this.nullifier = nullifier;
        this.allowChain = allowChain;
        this.nullified = nullified;
        this.index = index;
        this.hashPath = hashPath;
    }
    get assetId() {
        return this.treeNote.assetId;
    }
    get value() {
        return this.treeNote.value;
    }
    get owner() {
        return this.treeNote.ownerPubKey;
    }
    get ownerAccountRequired() {
        return this.treeNote.accountRequired;
    }
    get pending() {
        return this.index === undefined;
    }
}
export const noteToJson = ({ treeNote, commitment, nullifier, allowChain, nullified, index, hashPath, }) => ({
    treeNote: new Uint8Array(treeNote.toBuffer()),
    commitment: commitment.toString('hex'),
    nullifier: nullifier.toString('hex'),
    allowChain,
    nullified,
    index,
    hashPath: hashPath?.toString('hex'),
});
export const noteFromJson = ({ treeNote, commitment, nullifier, allowChain, nullified, index, hashPath }) => new Note(TreeNote.fromBuffer(Buffer.from(treeNote)), Buffer.from(commitment, 'hex'), Buffer.from(nullifier, 'hex'), allowChain, nullified, index, hashPath ? Buffer.from(hashPath, 'hex') : undefined);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ub3RlL25vdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBRS9ELE1BQU0sT0FBTyxJQUFJO0lBQ2YsWUFDUyxRQUFrQixFQUNsQixVQUFrQixFQUNsQixTQUFpQixFQUNqQixVQUFtQixFQUNuQixTQUFrQixFQUNsQixLQUFjLEVBQ2QsUUFBaUI7UUFOakIsYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQUNsQixlQUFVLEdBQVYsVUFBVSxDQUFRO1FBQ2xCLGNBQVMsR0FBVCxTQUFTLENBQVE7UUFDakIsZUFBVSxHQUFWLFVBQVUsQ0FBUztRQUNuQixjQUFTLEdBQVQsU0FBUyxDQUFTO1FBQ2xCLFVBQUssR0FBTCxLQUFLLENBQVM7UUFDZCxhQUFRLEdBQVIsUUFBUSxDQUFTO0lBQ3ZCLENBQUM7SUFFSixJQUFJLE9BQU87UUFDVCxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDO0lBQy9CLENBQUM7SUFFRCxJQUFJLEtBQUs7UUFDUCxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDO0lBQzdCLENBQUM7SUFFRCxJQUFJLEtBQUs7UUFDUCxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDO0lBQ25DLENBQUM7SUFFRCxJQUFJLG9CQUFvQjtRQUN0QixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsZUFBZSxDQUFDO0lBQ3ZDLENBQUM7SUFFRCxJQUFJLE9BQU87UUFDVCxPQUFPLElBQUksQ0FBQyxLQUFLLEtBQUssU0FBUyxDQUFDO0lBQ2xDLENBQUM7Q0FDRjtBQVlELE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBRyxDQUFDLEVBQ3pCLFFBQVEsRUFDUixVQUFVLEVBQ1YsU0FBUyxFQUNULFVBQVUsRUFDVixTQUFTLEVBQ1QsS0FBSyxFQUNMLFFBQVEsR0FDSCxFQUFZLEVBQUUsQ0FBQyxDQUFDO0lBQ3JCLFFBQVEsRUFBRSxJQUFJLFVBQVUsQ0FBQyxRQUFRLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDN0MsVUFBVSxFQUFFLFVBQVUsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDO0lBQ3RDLFNBQVMsRUFBRSxTQUFTLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQztJQUNwQyxVQUFVO0lBQ1YsU0FBUztJQUNULEtBQUs7SUFDTCxRQUFRLEVBQUUsUUFBUSxFQUFFLFFBQVEsQ0FBQyxLQUFLLENBQUM7Q0FDcEMsQ0FBQyxDQUFDO0FBRUgsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHLENBQUMsRUFBRSxRQUFRLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQVksRUFBRSxFQUFFLENBQ3BILElBQUksSUFBSSxDQUNOLFFBQVEsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUMxQyxNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxLQUFLLENBQUMsRUFDOUIsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsS0FBSyxDQUFDLEVBQzdCLFVBQVUsRUFDVixTQUFTLEVBQ1QsS0FBSyxFQUNMLFFBQVEsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FDcEQsQ0FBQyJ9