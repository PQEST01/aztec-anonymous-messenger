import { AliasHash } from '@aztec/barretenberg/account_id';
import { GrumpkinAddress } from '@aztec/barretenberg/address';
import { toBigIntBE } from '@aztec/barretenberg/bigint_buffer';
import { BridgeCallData } from '@aztec/barretenberg/bridge_call_data';
import { ProofId } from '@aztec/barretenberg/client_proofs';
import { TxId } from '@aztec/barretenberg/tx_id';
import { randomBytes } from '@aztec/barretenberg/crypto';
import { CoreAccountTx } from './core_account_tx.js';
import { CoreDefiTx } from './core_defi_tx.js';
import { CorePaymentTx } from './core_payment_tx.js';
export const randomCoreAccountTx = (tx = {}) => new CoreAccountTx(tx.txId || TxId.random(), tx.userId || GrumpkinAddress.random(), tx.aliasHash || AliasHash.random(), tx.newSpendingPublicKey1 || randomBytes(32), tx.newSpendingPublicKey2 || randomBytes(32), tx.migrated || false, tx.txRefNo || 0, tx.created || new Date(), tx.settled);
export const randomCorePaymentTx = (tx = {}) => new CorePaymentTx(tx.txId || TxId.random(), tx.userId || GrumpkinAddress.random(), tx.proofId ?? ProofId.SEND, tx.assetId || 0, tx.publicValue || BigInt(0), tx.publicOwner || undefined, tx.privateInput || BigInt(0), tx.recipientPrivateOutput || BigInt(0), tx.senderPrivateOutput || BigInt(0), tx.isRecipient ?? true, tx.isSender ?? true, tx.txRefNo || 0, tx.created || new Date(), tx.settled);
export const randomCoreDefiTx = (tx = {}) => new CoreDefiTx(tx.txId || TxId.random(), tx.userId || GrumpkinAddress.random(), tx.bridgeCallData || BridgeCallData.random(), tx.depositValue ?? toBigIntBE(randomBytes(4)), tx.txFee ?? toBigIntBE(randomBytes(4)), tx.txRefNo || 0, tx.created || new Date(), tx.partialState ?? randomBytes(32), tx.partialStateSecret ?? randomBytes(32), tx.nullifier ?? randomBytes(32), tx.settled, tx.interactionNonce, tx.isAsync, tx.success, tx.outputValueA, tx.outputValueB, tx.finalised, tx.claimSettled, tx.claimTxId);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZml4dHVyZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY29yZV90eC9maXh0dXJlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDM0QsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQzlELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUMvRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDdEUsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQzVELE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDekQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFFckQsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQUcsQ0FBQyxLQUE2QixFQUFFLEVBQUUsRUFBRSxDQUNyRSxJQUFJLGFBQWEsQ0FDZixFQUFFLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUUsRUFDeEIsRUFBRSxDQUFDLE1BQU0sSUFBSSxlQUFlLENBQUMsTUFBTSxFQUFFLEVBQ3JDLEVBQUUsQ0FBQyxTQUFTLElBQUksU0FBUyxDQUFDLE1BQU0sRUFBRSxFQUNsQyxFQUFFLENBQUMscUJBQXFCLElBQUksV0FBVyxDQUFDLEVBQUUsQ0FBQyxFQUMzQyxFQUFFLENBQUMscUJBQXFCLElBQUksV0FBVyxDQUFDLEVBQUUsQ0FBQyxFQUMzQyxFQUFFLENBQUMsUUFBUSxJQUFJLEtBQUssRUFDcEIsRUFBRSxDQUFDLE9BQU8sSUFBSSxDQUFDLEVBQ2YsRUFBRSxDQUFDLE9BQU8sSUFBSSxJQUFJLElBQUksRUFBRSxFQUN4QixFQUFFLENBQUMsT0FBTyxDQUNYLENBQUM7QUFFSixNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRyxDQUFDLEtBQTZCLEVBQUUsRUFBRSxFQUFFLENBQ3JFLElBQUksYUFBYSxDQUNmLEVBQUUsQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUN4QixFQUFFLENBQUMsTUFBTSxJQUFJLGVBQWUsQ0FBQyxNQUFNLEVBQUUsRUFDckMsRUFBRSxDQUFDLE9BQU8sSUFBSSxPQUFPLENBQUMsSUFBSSxFQUMxQixFQUFFLENBQUMsT0FBTyxJQUFJLENBQUMsRUFDZixFQUFFLENBQUMsV0FBVyxJQUFJLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFDM0IsRUFBRSxDQUFDLFdBQVcsSUFBSSxTQUFTLEVBQzNCLEVBQUUsQ0FBQyxZQUFZLElBQUksTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUM1QixFQUFFLENBQUMsc0JBQXNCLElBQUksTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUN0QyxFQUFFLENBQUMsbUJBQW1CLElBQUksTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUNuQyxFQUFFLENBQUMsV0FBVyxJQUFJLElBQUksRUFDdEIsRUFBRSxDQUFDLFFBQVEsSUFBSSxJQUFJLEVBQ25CLEVBQUUsQ0FBQyxPQUFPLElBQUksQ0FBQyxFQUNmLEVBQUUsQ0FBQyxPQUFPLElBQUksSUFBSSxJQUFJLEVBQUUsRUFDeEIsRUFBRSxDQUFDLE9BQU8sQ0FDWCxDQUFDO0FBRUosTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQUcsQ0FBQyxLQUEwQixFQUFFLEVBQUUsRUFBRSxDQUMvRCxJQUFJLFVBQVUsQ0FDWixFQUFFLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUUsRUFDeEIsRUFBRSxDQUFDLE1BQU0sSUFBSSxlQUFlLENBQUMsTUFBTSxFQUFFLEVBQ3JDLEVBQUUsQ0FBQyxjQUFjLElBQUksY0FBYyxDQUFDLE1BQU0sRUFBRSxFQUM1QyxFQUFFLENBQUMsWUFBWSxJQUFJLFVBQVUsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFDN0MsRUFBRSxDQUFDLEtBQUssSUFBSSxVQUFVLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQ3RDLEVBQUUsQ0FBQyxPQUFPLElBQUksQ0FBQyxFQUNmLEVBQUUsQ0FBQyxPQUFPLElBQUksSUFBSSxJQUFJLEVBQUUsRUFDeEIsRUFBRSxDQUFDLFlBQVksSUFBSSxXQUFXLENBQUMsRUFBRSxDQUFDLEVBQ2xDLEVBQUUsQ0FBQyxrQkFBa0IsSUFBSSxXQUFXLENBQUMsRUFBRSxDQUFDLEVBQ3hDLEVBQUUsQ0FBQyxTQUFTLElBQUksV0FBVyxDQUFDLEVBQUUsQ0FBQyxFQUMvQixFQUFFLENBQUMsT0FBTyxFQUNWLEVBQUUsQ0FBQyxnQkFBZ0IsRUFDbkIsRUFBRSxDQUFDLE9BQU8sRUFDVixFQUFFLENBQUMsT0FBTyxFQUNWLEVBQUUsQ0FBQyxZQUFZLEVBQ2YsRUFBRSxDQUFDLFlBQVksRUFDZixFQUFFLENBQUMsU0FBUyxFQUNaLEVBQUUsQ0FBQyxZQUFZLEVBQ2YsRUFBRSxDQUFDLFNBQVMsQ0FDYixDQUFDIn0=