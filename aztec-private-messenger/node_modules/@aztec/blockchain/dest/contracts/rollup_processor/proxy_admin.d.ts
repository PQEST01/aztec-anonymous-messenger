import { EthAddress } from '@aztec/barretenberg/address';
import { Contract, ContractFactory, Signer } from 'ethers';
/**
 * Thin wrapper around the Proxy Admin contract.
 */
export declare class ProxyAdmin {
    private signer;
    proxyAdmin: Contract;
    proxyDeployer: Contract;
    vanitySalt: string;
    constructor(signer: Signer);
    connectNewSigner(signer: Signer): void;
    connectToInstance(address: EthAddress): void;
    deployInstance(): Promise<void>;
    get address(): EthAddress;
    get contract(): Contract;
    owner(): Promise<EthAddress>;
    getProxyAdmin(proxy: EthAddress): Promise<any>;
    getProxyImplementation(proxy: EthAddress): Promise<any>;
    changeProxyAdmin(proxy: EthAddress, newAdmin: EthAddress): Promise<void>;
    transferProxyAdminOwnership(newOwner: EthAddress): Promise<void>;
    upgradeUNSAFE(proxy: EthAddress, implementationFactory: ContractFactory, constructorArgs: unknown[]): Promise<Contract>;
    upgradeAndInitializeWithConstructor(proxy: EthAddress, implementationFactory: ContractFactory, initializeArgs: unknown[], constructorArgs: unknown[]): Promise<Contract>;
    deployProxyUNSAFE(implementationFactory: ContractFactory, constructorArgs: unknown[]): Promise<Contract>;
    deployProxyAndInitializeWithConstructor(implementationFactory: ContractFactory, initializeArgs: unknown[], constructorArgs: unknown[]): Promise<Contract>;
}
//# sourceMappingURL=proxy_admin.d.ts.map