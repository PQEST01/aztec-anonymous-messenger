import { EthAddress } from '@aztec/barretenberg/address';
import { EthereumProvider, BridgeData, BridgeSubsidy } from '@aztec/barretenberg/blockchain';
import { Contract } from 'ethers';
import { WalletProvider } from '../../index.js';
export declare function setMockBridgeSubsidy(provider: WalletProvider, bridgeDataProviderAddress: EthAddress, bridgeAddressId: number, subsidy: number, signingAddress?: EthAddress): Promise<void>;
export declare class BridgeDataProvider {
    private bridgeDataProviderAddress;
    private contract;
    private subsidyCache;
    private bridgeDataCache;
    constructor(bridgeDataProviderAddress: EthAddress, ethereumProvider: EthereumProvider, contractCreation?: () => Contract);
    get address(): EthAddress;
    getBridgeSubsidy(bridgeCallData: bigint): Promise<BridgeSubsidy>;
    getBridgeData(bridgeAddressId: number): Promise<BridgeData>;
    updatePerEthBlockState(): void;
}
//# sourceMappingURL=bridge_data_provider.d.ts.map