import { createDebugLogger } from '../log/index.js';
import { TreeNote } from './tree_note.js';
const debug = createDebugLogger('recover_tree_notes');
export const recoverTreeNotes = (decryptedNotes, inputNullifiers, noteCommitments, ownerPubKey, noteAlgorithms) => {
    return decryptedNotes.map((decrypted, i) => {
        if (!decrypted) {
            debug(`index ${i}: no decrypted tree note.`);
            return;
        }
        const noteCommitment = noteCommitments[i];
        const inputNullifier = inputNullifiers[i];
        const note = TreeNote.recover(decrypted, inputNullifier, ownerPubKey);
        debug({ note });
        const commitment = noteAlgorithms.valueNoteCommitment(note);
        if (commitment.equals(noteCommitment)) {
            debug(`index ${i}: tree commitment ${noteCommitment.toString('hex')} matches note version 1.`);
            return note;
        }
        debug(`index ${i}: tree commitment ${noteCommitment.toString('hex')} != encrypted note commitment ${commitment.toString('hex')}.`);
    });
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVjb3Zlcl90cmVlX25vdGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL25vdGVfYWxnb3JpdGhtcy9yZWNvdmVyX3RyZWVfbm90ZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFHcEQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRTFDLE1BQU0sS0FBSyxHQUFHLGlCQUFpQixDQUFDLG9CQUFvQixDQUFDLENBQUM7QUFFdEQsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQUcsQ0FDOUIsY0FBNkMsRUFDN0MsZUFBeUIsRUFDekIsZUFBeUIsRUFDekIsV0FBNEIsRUFDNUIsY0FBOEIsRUFDOUIsRUFBRTtJQUNGLE9BQU8sY0FBYyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFNBQVMsRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUN6QyxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQ2QsS0FBSyxDQUFDLFNBQVMsQ0FBQywyQkFBMkIsQ0FBQyxDQUFDO1lBQzdDLE9BQU87U0FDUjtRQUVELE1BQU0sY0FBYyxHQUFHLGVBQWUsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUMxQyxNQUFNLGNBQWMsR0FBRyxlQUFlLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFMUMsTUFBTSxJQUFJLEdBQUcsUUFBUSxDQUFDLE9BQU8sQ0FBQyxTQUFTLEVBQUUsY0FBYyxFQUFFLFdBQVcsQ0FBQyxDQUFDO1FBQ3RFLEtBQUssQ0FBQyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7UUFDaEIsTUFBTSxVQUFVLEdBQUcsY0FBYyxDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzVELElBQUksVUFBVSxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsRUFBRTtZQUNyQyxLQUFLLENBQUMsU0FBUyxDQUFDLHFCQUFxQixjQUFjLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQywwQkFBMEIsQ0FBQyxDQUFDO1lBQy9GLE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFDRCxLQUFLLENBQ0gsU0FBUyxDQUFDLHFCQUFxQixjQUFjLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxpQ0FBaUMsVUFBVSxDQUFDLFFBQVEsQ0FDL0csS0FBSyxDQUNOLEdBQUcsQ0FDTCxDQUFDO0lBQ0osQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMifQ==