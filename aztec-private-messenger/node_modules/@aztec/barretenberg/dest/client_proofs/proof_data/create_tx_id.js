import { Keccak } from 'sha3';
import { ProofId } from './proof_id.js';
const hash = new Keccak(256);
export function createTxId(rawProofData) {
    const proofId = rawProofData.readUInt32BE(28);
    const txIdData = proofId === ProofId.DEFI_DEPOSIT
        ? Buffer.concat([
            rawProofData.slice(0, 32),
            Buffer.alloc(32),
            rawProofData.slice(2 * 32),
        ])
        : rawProofData;
    hash.reset();
    return hash.update(txIdData).digest();
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlX3R4X2lkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NsaWVudF9wcm9vZnMvcHJvb2ZfZGF0YS9jcmVhdGVfdHhfaWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUM5QixPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXhDLE1BQU0sSUFBSSxHQUFHLElBQUksTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBRTdCLE1BQU0sVUFBVSxVQUFVLENBQUMsWUFBb0I7SUFDN0MsTUFBTSxPQUFPLEdBQUcsWUFBWSxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUM5QyxNQUFNLFFBQVEsR0FDWixPQUFPLEtBQUssT0FBTyxDQUFDLFlBQVk7UUFDOUIsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUM7WUFDWixZQUFZLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUM7WUFDekIsTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUM7WUFDaEIsWUFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDO1NBQzNCLENBQUM7UUFDSixDQUFDLENBQUMsWUFBWSxDQUFDO0lBQ25CLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUNiLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQztBQUN4QyxDQUFDIn0=