/// <reference types="node" resolution-mode="require"/>
import { Block } from './index.js';
export declare class DecodedBlock {
    private block;
    private decoded?;
    constructor(block: Block);
    get rollupId(): number;
    get gasPrice(): bigint;
    get gasUsed(): number;
    get subtreeRoot(): Buffer | undefined;
    get dataStartIndex(): number;
    get oldDataRoot(): Buffer;
    get newDataRoot(): Buffer;
    get oldNullRoot(): Buffer;
    get newNullRoot(): Buffer;
    get oldDataRootsRoot(): Buffer;
    get newDataRootsRoot(): Buffer;
    get oldDefiRoot(): Buffer;
    get newDefiRoot(): Buffer;
    get defiDepositSums(): bigint[];
    get assetIds(): number[];
    get totalTxFees(): bigint[];
    get prevDefiInteractionHash(): Buffer;
    get rollupBeneficiary(): Buffer;
    get innerProofData(): import("../rollup_proof/inner_proof.js").InnerProofData[];
    get ethTxHash(): import("../blockchain/tx_hash.js").TxHash;
    get rollupSize(): number;
    get numRollupTxs(): number;
    get minedTime(): Date;
    get defiInteractionEvents(): import("./defi_interaction_event.js").DefiInteractionEvent[];
    get offchainData(): Buffer[];
    get rollupHash(): Buffer;
    get rawProofData(): Buffer;
    private getDecodedProof;
}
//# sourceMappingURL=decoded_block.d.ts.map