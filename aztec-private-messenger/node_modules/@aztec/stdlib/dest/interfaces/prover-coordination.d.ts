import type { ApiSchemaFor } from '../schemas/index.js';
import { Tx } from '../tx/tx.js';
import { TxHash } from '../tx/tx_hash.js';
/** Provides basic operations for ProverNodes to interact with other nodes in the network. */
export interface ProverCoordination {
    /**
     * Returns a transaction given its hash if available.
     * @param txHash - The hash of the transaction, used as an ID.
     * @returns The transaction, if found, 'undefined' otherwise.
     */
    getTxByHash(txHash: TxHash): Promise<Tx | undefined>;
    /**
     * Returns a set of transactions given their hashes if available.
     * @param txHashes - The hashes of the transactions, used as an ID.
     * @returns The transactions, if found, 'undefined' otherwise.
     */
    getTxsByHash(txHashes: TxHash[]): Promise<Tx[]>;
}
export declare const ProverCoordinationApiSchema: ApiSchemaFor<ProverCoordination>;
//# sourceMappingURL=prover-coordination.d.ts.map