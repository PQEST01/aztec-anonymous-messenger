import { P2PClientType } from './client_type.js';
/** Create Topic String
 *
 * The topic channel identifier
 * @param topicType
 * @returns
 */ export function createTopicString(topicType) {
    return '/aztec/' + topicType + '/0.1.0';
}
/**
 *
 */ export var TopicType = /*#__PURE__*/ function(TopicType) {
    TopicType["tx"] = "tx";
    TopicType["block_proposal"] = "block_proposal";
    TopicType["block_attestation"] = "block_attestation";
    return TopicType;
}({});
export function getTopicTypeForClientType(clientType) {
    if (clientType === P2PClientType.Full) {
        return Object.values(TopicType);
    }
    return [
        "tx"
    ];
}
/**
 * Convert the topic string into a set of labels
 *
 * In the form:
 * {
 *  "/aztec/tx/0.1.0": "tx",
 *  ...
 * }
 */ export function metricsTopicStrToLabels() {
    const topicStrToLabel = new Map();
    for(const topic in TopicType){
        topicStrToLabel.set(createTopicString(TopicType[topic]), topic);
    }
    return topicStrToLabel;
}
