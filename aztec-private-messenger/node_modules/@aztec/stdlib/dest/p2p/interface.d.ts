import { Tx } from '../tx/tx.js';
import { BlockAttestation } from './block_attestation.js';
import { BlockProposal } from './block_proposal.js';
import type { Gossipable } from './gossipable.js';
export interface RawGossipMessage {
    topic: string;
    data: Uint8Array;
}
export declare const TopicTypeMap: Record<string, typeof Gossipable>;
/**
 * Map from topic to deserialiser
 *
 * Used in msgIdFn libp2p to get the p2pMessageIdentifier from a message
 */
export declare const TopicToDeserializer: {
    [x: string]: typeof BlockAttestation.fromBuffer | typeof BlockProposal.fromBuffer | typeof Tx.fromBuffer;
};
//# sourceMappingURL=interface.d.ts.map