import { z } from 'zod';
export type L1RollupConstants = {
    l1StartBlock: bigint;
    l1GenesisTime: bigint;
    slotDuration: number;
    epochDuration: number;
    ethereumSlotDuration: number;
};
export declare const EmptyL1RollupConstants: L1RollupConstants;
export declare const L1RollupConstantsSchema: z.ZodObject<{
    l1StartBlock: z.ZodPipeline<z.ZodUnion<[z.ZodBigInt, z.ZodNumber, z.ZodString]>, z.ZodBigInt>;
    l1GenesisTime: z.ZodPipeline<z.ZodUnion<[z.ZodBigInt, z.ZodNumber, z.ZodString]>, z.ZodBigInt>;
    slotDuration: z.ZodNumber;
    epochDuration: z.ZodNumber;
    ethereumSlotDuration: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    l1StartBlock: bigint;
    l1GenesisTime: bigint;
    slotDuration: number;
    epochDuration: number;
    ethereumSlotDuration: number;
}, {
    l1StartBlock: string | number | bigint;
    l1GenesisTime: string | number | bigint;
    slotDuration: number;
    epochDuration: number;
    ethereumSlotDuration: number;
}>;
/** Returns the timestamp for a given L2 slot. */
export declare function getTimestampForSlot(slot: bigint, constants: Pick<L1RollupConstants, 'l1GenesisTime' | 'slotDuration'>): bigint;
/** Returns the slot number for a given timestamp. */
export declare function getSlotAtTimestamp(ts: bigint, constants: Pick<L1RollupConstants, 'l1GenesisTime' | 'slotDuration'>): bigint;
/** Returns the epoch number for a given timestamp. */
export declare function getEpochNumberAtTimestamp(ts: bigint, constants: Pick<L1RollupConstants, 'epochDuration' | 'slotDuration' | 'l1GenesisTime'>): bigint;
/** Returns the epoch number for a given slot. */
export declare function getEpochAtSlot(slot: bigint, constants: Pick<L1RollupConstants, 'epochDuration'>): bigint;
/** Returns the range of L2 slots (inclusive) for a given epoch number. */
export declare function getSlotRangeForEpoch(epochNumber: bigint, constants: Pick<L1RollupConstants, 'epochDuration'>): bigint[];
/**
 * Returns the range of L1 timestamps (inclusive) for a given epoch number.
 * Note that the endTimestamp is the start timestamp of the last L1 slot for the epoch.
 */
export declare function getTimestampRangeForEpoch(epochNumber: bigint, constants: Pick<L1RollupConstants, 'l1GenesisTime' | 'slotDuration' | 'epochDuration' | 'ethereumSlotDuration'>): bigint[];
//# sourceMappingURL=index.d.ts.map